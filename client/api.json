{
  "openapi": "3.0.1",
  "info": {
    "title": "Chaekit API",
    "description": "책잇 API 명세서",
    "version": "1.0"
  },
  "servers": [],
  "paths": {
    "/api/users/join": {
      "post": {
        "tags": ["user-controller"],
        "operationId": "userJoin",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": { "$ref": "#/components/schemas/UserJoinRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseLoginResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/token/refresh": {
      "post": {
        "tags": ["token-controller"],
        "summary": "Access Token 재발급",
        "description": "Access Token이 만료되었을 때, 유효한 Refresh Token을 통해 새로운 Access Token을 발급받는 API",
        "operationId": "refreshAccessToken",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/RefreshTokenRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseRefreshTokenResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/publishers/join": {
      "post": {
        "tags": ["publisher-controller"],
        "operationId": "publisherJoin",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": { "$ref": "#/components/schemas/PublisherJoinRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseLoginResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/logout": {
      "post": {
        "tags": ["token-controller"],
        "summary": "로그아웃",
        "description": "로그아웃 요청 시 기존 Refresh Token을 무효화합니다.",
        "operationId": "logout",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/RefreshTokenRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseVoid"
                }
              }
            }
          }
        }
      }
    },
    "/api/login": {
      "post": {
        "tags": ["login-filter-controller"],
        "summary": "로그인",
        "description": "Spring Security가 처리하는 로그인 API",
        "operationId": "login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/LoginRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseLoginResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/highlights": {
      "get": {
        "tags": ["highlight-controller"],
        "operationId": "getHighlights",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": { "minimum": 0, "type": "integer", "default": 0 }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": { "minimum": 1, "type": "integer", "default": 20 }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "name": "activityId",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "bookId",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "spine",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "me",
            "in": "query",
            "required": false,
            "schema": { "type": "boolean" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponsePageResponseHighlightFetchResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["highlight-controller"],
        "operationId": "createHighlight",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/HighlightPostRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseHighlightPostResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/highlights/{highlightId}/reactions": {
      "get": {
        "tags": ["highlight-controller"],
        "operationId": "getHighlightReactions",
        "parameters": [
          {
            "name": "highlightId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseListReactionResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["reaction-controller"],
        "operationId": "addReaction",
        "parameters": [
          {
            "name": "highlightId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ReactionRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseReactionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/highlights/{highlightId}/comments": {
      "get": {
        "tags": ["comment-controller"],
        "operationId": "getComments",
        "parameters": [
          {
            "name": "highlightId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseListCommentResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["comment-controller"],
        "operationId": "createComment",
        "parameters": [
          {
            "name": "highlightId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CommentRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseCommentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/groups": {
      "get": {
        "tags": ["group-controller"],
        "operationId": "getAllGroups",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": { "minimum": 0, "type": "integer", "default": 0 }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": { "minimum": 1, "type": "integer", "default": 20 }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponsePageResponseGroupFetchResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["group-controller"],
        "operationId": "createGroup",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": { "$ref": "#/components/schemas/GroupPostRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseGroupPostResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/groups/{groupId}/join": {
      "post": {
        "tags": ["group-controller"],
        "operationId": "requestJoinGroup",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseGroupJoinResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/groups/{groupId}/activities": {
      "get": {
        "tags": ["activity-controller"],
        "operationId": "getAllActivities",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": { "minimum": 0, "type": "integer", "default": 0 }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": { "minimum": 1, "type": "integer", "default": 20 }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponsePageResponseActivityFetchResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["activity-controller"],
        "operationId": "createActivity",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ActivityPostRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseActivityPostResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["activity-controller"],
        "operationId": "updateActivity",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ActivityPatchRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseActivityPostResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/email-verification/send-verification-code": {
      "post": {
        "tags": ["email-verification-controller"],
        "summary": "인증 코드 발송",
        "description": "이메일로 인증 코드를 생성하여 발송하는 API입니다. 생성된 인증 코드는 Redis에 저장되며, 유효 기간은 30분입니다.",
        "operationId": "sendVerificationCode",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseString"
                }
              }
            }
          }
        }
      }
    },
    "/api/discussions/{discussionId}/comments": {
      "post": {
        "tags": ["discussion-controller"],
        "summary": "토론 댓글 작성",
        "description": "토론 게시글에 토론 댓글을 작성합니다.",
        "operationId": "addComment",
        "parameters": [
          {
            "name": "discussionId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiscussionCommentPostRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DiscussionCommentFetchResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/books": {
      "get": {
        "tags": ["ebook-controller"],
        "summary": "전자책 목록 조회",
        "description": "전자책 목록을 페이지네이션하여 조회합니다.",
        "operationId": "getBooks",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": { "minimum": 0, "type": "integer", "default": 0 }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": { "minimum": 1, "type": "integer", "default": 20 }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponsePageResponseEbookFetchResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["ebook-controller"],
        "summary": "전자책 업로드",
        "description": "출판사가 전자책 파일과 정보를 업로드합니다.",
        "operationId": "uploadFile",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": { "$ref": "#/components/schemas/EbookPostRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseEbookPostResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/publishers/{publisherId}/reject": {
      "post": {
        "tags": ["admin-controller"],
        "summary": "출판사 거절",
        "description": "사유를 제시하며 출판사를 거절합니다.",
        "operationId": "rejectPublisher",
        "parameters": [
          {
            "name": "publisherId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RejectPublisherRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseVoid"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/publishers/{publisherId}/accept": {
      "post": {
        "tags": ["admin-controller"],
        "summary": "출판사 승인",
        "description": "출판사를 승인합니다.",
        "operationId": "acceptPublisher",
        "parameters": [
          {
            "name": "publisherId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseVoid"
                }
              }
            }
          }
        }
      }
    },
    "/api/activities/{activityId}/discussions": {
      "get": {
        "tags": ["discussion-controller"],
        "summary": "토론 목록 조회",
        "description": "특정 활동에 해당하는 토론 목록을 조회합니다.",
        "operationId": "getDiscussions",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": { "minimum": 0, "type": "integer", "default": 0 }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": { "minimum": 1, "type": "integer", "default": 20 }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "name": "activityId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseDiscussionFetchResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["discussion-controller"],
        "summary": "토론 생성",
        "description": "특정 활동에 새로운 토론을 생성합니다.",
        "operationId": "createDiscussion",
        "parameters": [
          {
            "name": "activityId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DiscussionPostRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DiscussionFetchResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/highlights/{id}": {
      "delete": {
        "tags": ["highlight-controller"],
        "operationId": "deleteHighlight",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseString"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["highlight-controller"],
        "operationId": "updateHighlight",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/HighlightPutRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseHighlightPostResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/highlights/comments/{commentId}": {
      "delete": {
        "tags": ["comment-controller"],
        "operationId": "deleteComment",
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseString"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["comment-controller"],
        "operationId": "updateComment",
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CommentRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseCommentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/groups/{groupId}": {
      "patch": {
        "tags": ["group-controller"],
        "operationId": "updateGroup",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "request",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/GroupPatchRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseGroupPostResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/groups/{groupId}/members/{userId}/reject": {
      "patch": {
        "tags": ["group-controller"],
        "operationId": "rejectJoinRequest",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseVoid"
                }
              }
            }
          }
        }
      }
    },
    "/api/groups/{groupId}/members/{userId}/approve": {
      "patch": {
        "tags": ["group-controller"],
        "operationId": "approveJoinRequest",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseGroupJoinResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/discussions/{discussionId}": {
      "get": {
        "tags": ["discussion-controller"],
        "summary": "토론 상세 조회",
        "description": "특정 토론에 대해 댓글 등을 포함한 상세 정보를 조회합니다.",
        "operationId": "getDiscussion",
        "parameters": [
          {
            "name": "discussionId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DiscussionDetailResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["discussion-controller"],
        "summary": "토론 삭제",
        "description": "토론을 삭제합니다.",
        "operationId": "deleteDiscussion",
        "parameters": [
          {
            "name": "discussionId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": { "200": { "description": "OK" } }
      },
      "patch": {
        "tags": ["discussion-controller"],
        "summary": "토론 수정",
        "description": "토론 제목, 내용, 찬반 여부를 수정합니다.",
        "operationId": "updateDiscussion",
        "parameters": [
          {
            "name": "discussionId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiscussionPatchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DiscussionFetchResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/discussions/comments/{commentId}": {
      "get": {
        "tags": ["discussion-controller"],
        "summary": "토론 댓글 단건 조회",
        "description": "토론 댓글을 조회합니다.",
        "operationId": "getComment",
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DiscussionCommentFetchResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["discussion-controller"],
        "summary": "토론 댓글 삭제",
        "description": "토론 댓글을 삭제합니다.",
        "operationId": "deleteComment_1",
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": { "200": { "description": "OK" } }
      },
      "patch": {
        "tags": ["discussion-controller"],
        "summary": "토론 댓글 수정",
        "description": "토론 댓글의 내용을 수정합니다.",
        "operationId": "updateComment_1",
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiscussionCommentPatchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DiscussionCommentFetchResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api": {
      "get": {
        "tags": ["main-controller"],
        "operationId": "mainApi",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseString"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/me": {
      "get": {
        "tags": ["user-controller"],
        "operationId": "userInfo",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseUserInfoResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/publishers/me": {
      "get": {
        "tags": ["publisher-controller"],
        "operationId": "publisherInfo",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponsePublisherInfoResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/groups/{groupId}/members/pending": {
      "get": {
        "tags": ["group-controller"],
        "operationId": "getPendingList",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": { "minimum": 0, "type": "integer", "default": 0 }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": { "minimum": 1, "type": "integer", "default": 20 }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponsePageResponseGroupPendingMemberResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/groups/{groupId}/info": {
      "get": {
        "tags": ["group-controller"],
        "operationId": "getGroup",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseGroupFetchResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/email-verification/verify-code": {
      "get": {
        "tags": ["email-verification-controller"],
        "summary": "인증 코드 검증",
        "description": "사용자가 입력한 인증 코드를 검증합니다. 올바른 코드일 경우 인증 성공 메시지를 반환하고, 실패하면 400 에러를 반환합니다.",
        "operationId": "verifyCode",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "verificationCode",
            "in": "query",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseString"
                }
              }
            }
          }
        }
      }
    },
    "/api/books/search": {
      "get": {
        "tags": ["ebook-controller"],
        "operationId": "searchEbooks",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": { "minimum": 0, "type": "integer", "default": 0 }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": { "minimum": 1, "type": "integer", "default": 20 }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "name": "request",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/EbookSearchRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponsePageResponseEbookSearchResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/books/download/{ebookId}": {
      "get": {
        "tags": ["ebook-controller"],
        "summary": "전자책 다운로드 URL 생성",
        "description": "관리자가 전자책 다운로드를 위한 URL을 생성합니다.",
        "operationId": "downloadFile",
        "parameters": [
          {
            "name": "ebookId",
            "in": "path",
            "description": "다운로드할 전자책 ID",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseEbookDownloadResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/users": {
      "get": {
        "tags": ["admin-controller"],
        "summary": "유저 목록 조회",
        "description": "모든 유저 목록을 확인할 수 있습니다.",
        "operationId": "fetchUsers",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": { "minimum": 0, "type": "integer", "default": 0 }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": { "minimum": 1, "type": "integer", "default": 20 }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponsePageResponseUserInfoResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/publishers": {
      "get": {
        "tags": ["admin-controller"],
        "summary": "출판사 목록 조회",
        "description": "모든 출판사 목록을 확인할 수 있습니다.",
        "operationId": "fetchPublishers",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": { "minimum": 0, "type": "integer", "default": 0 }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": { "minimum": 1, "type": "integer", "default": 20 }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponsePageResponsePublisherInfoResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/publishers/pending": {
      "get": {
        "tags": ["admin-controller"],
        "summary": "출판사 승인 대기 목록 조회",
        "description": "승인 대기 중인 출판사 목록을 확인할 수 있습니다.",
        "operationId": "fetchPendingList",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": { "minimum": 0, "type": "integer", "default": 0 }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": { "minimum": 1, "type": "integer", "default": 20 }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponsePageResponsePublisherInfoResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/highlights/reactions/{reactionId}": {
      "delete": {
        "tags": ["reaction-controller"],
        "operationId": "deleteReaction",
        "parameters": [
          {
            "name": "reactionId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseString"
                }
              }
            }
          }
        }
      }
    },
    "/api/groups/{groupId}/members/leave": {
      "delete": {
        "tags": ["group-controller"],
        "operationId": "leaveGroup",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseVoid"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "UserJoinRequest": {
        "required": ["email", "nickname", "password", "verificationCode"],
        "type": "object",
        "properties": {
          "email": { "type": "string" },
          "password": { "type": "string" },
          "nickname": { "type": "string" },
          "profileImage": { "type": "string", "format": "binary" },
          "verificationCode": { "type": "string" }
        }
      },
      "ApiSuccessResponseLoginResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": { "type": "boolean" },
          "data": { "$ref": "#/components/schemas/LoginResponse" }
        },
        "description": "API 에러 응답을 감싸는 클래스"
      },
      "LoginResponse": {
        "required": [
          "accessToken",
          "email",
          "memberId",
          "refreshToken",
          "role"
        ],
        "type": "object",
        "properties": {
          "memberId": {
            "type": "integer",
            "description": "회원 고유 ID",
            "format": "int64",
            "example": 1
          },
          "email": {
            "type": "string",
            "description": "회원 이메일",
            "example": "user@example.com"
          },
          "userId": {
            "type": "integer",
            "description": "일반 사용자 ID",
            "format": "int64",
            "example": 1
          },
          "nickname": {
            "type": "string",
            "description": "닉네임",
            "example": "booklover"
          },
          "publisherId": {
            "type": "integer",
            "description": "출판사 ID",
            "format": "int64",
            "example": 1
          },
          "publisherName": {
            "type": "string",
            "description": "출판사 이름",
            "example": "문학과지성사"
          },
          "profileImageURL": {
            "type": "string",
            "description": "프로필 이미지 URL",
            "example": "https://cdn.example.com/images/profile1.png"
          },
          "role": {
            "type": "string",
            "description": "회원 역할",
            "example": "ROLE_USER"
          },
          "refreshToken": {
            "type": "string",
            "description": "Refresh Token (재발급용)",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "accessToken": {
            "type": "string",
            "description": "Access Token (API 인증용)",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          }
        }
      },
      "RefreshTokenRequest": {
        "required": ["refreshToken"],
        "type": "object",
        "properties": { "refreshToken": { "type": "string" } }
      },
      "ApiSuccessResponseRefreshTokenResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": { "type": "boolean" },
          "data": { "$ref": "#/components/schemas/RefreshTokenResponse" }
        },
        "description": "API 에러 응답을 감싸는 클래스"
      },
      "RefreshTokenResponse": {
        "type": "object",
        "properties": {
          "refreshToken": { "type": "string" },
          "accessToken": { "type": "string" }
        }
      },
      "PublisherJoinRequest": {
        "required": ["email", "password", "publisherName", "verificationCode"],
        "type": "object",
        "properties": {
          "publisherName": { "type": "string" },
          "email": { "type": "string" },
          "password": { "type": "string" },
          "profileImage": { "type": "string", "format": "binary" },
          "verificationCode": { "type": "string" }
        }
      },
      "ApiSuccessResponseVoid": {
        "type": "object",
        "properties": {
          "isSuccessful": { "type": "boolean" },
          "data": { "type": "object" }
        },
        "description": "API 에러 응답을 감싸는 클래스"
      },
      "LoginRequest": {
        "required": ["email", "password"],
        "type": "object",
        "properties": {
          "email": { "type": "string" },
          "password": { "type": "string" }
        }
      },
      "HighlightPostRequest": {
        "type": "object",
        "properties": {
          "bookId": { "type": "integer", "format": "int64" },
          "spine": { "type": "string" },
          "cfi": { "type": "string" },
          "activityId": { "type": "integer", "format": "int64" },
          "memo": { "type": "string" }
        }
      },
      "ApiSuccessResponseHighlightPostResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": { "type": "boolean" },
          "data": { "$ref": "#/components/schemas/HighlightPostResponse" }
        },
        "description": "API 에러 응답을 감싸는 클래스"
      },
      "HighlightPostResponse": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "bookId": { "type": "integer", "format": "int64" },
          "spine": { "type": "string" },
          "cfi": { "type": "string" },
          "memo": { "type": "string" },
          "activityId": { "type": "integer", "format": "int64" }
        }
      },
      "ReactionRequest": {
        "type": "object",
        "properties": {
          "commentId": { "type": "integer", "format": "int64" },
          "reactionType": {
            "type": "string",
            "enum": [
              "GREAT",
              "HEART",
              "SMILE",
              "CLAP",
              "SAD",
              "ANGRY",
              "SURPRISED"
            ]
          }
        }
      },
      "ApiSuccessResponseReactionResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": { "type": "boolean" },
          "data": { "$ref": "#/components/schemas/ReactionResponse" }
        },
        "description": "API 에러 응답을 감싸는 클래스"
      },
      "ReactionResponse": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "authorId": { "type": "integer", "format": "int64" },
          "authorName": { "type": "string" },
          "reactionType": {
            "type": "string",
            "enum": [
              "GREAT",
              "HEART",
              "SMILE",
              "CLAP",
              "SAD",
              "ANGRY",
              "SURPRISED"
            ]
          },
          "emoji": { "type": "string" },
          "commentId": { "type": "integer", "format": "int64" },
          "createdAt": { "type": "string", "format": "date-time" }
        }
      },
      "CommentRequest": {
        "type": "object",
        "properties": {
          "content": { "type": "string" },
          "parentId": { "type": "integer", "format": "int64" }
        }
      },
      "ApiSuccessResponseCommentResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": { "type": "boolean" },
          "data": { "$ref": "#/components/schemas/CommentResponse" }
        },
        "description": "API 에러 응답을 감싸는 클래스"
      },
      "CommentResponse": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "authorId": { "type": "integer", "format": "int64" },
          "authorName": { "type": "string" },
          "content": { "type": "string" },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" },
          "replies": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/CommentResponse" }
          },
          "reactions": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/ReactionResponse" }
          }
        }
      },
      "GroupPostRequest": {
        "required": ["description", "name"],
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "description": { "type": "string" },
          "tags": { "type": "array", "items": { "type": "string" } },
          "groupImage": { "type": "string", "format": "binary" }
        }
      },
      "ApiSuccessResponseGroupPostResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": { "type": "boolean" },
          "data": { "$ref": "#/components/schemas/GroupPostResponse" }
        },
        "description": "API 에러 응답을 감싸는 클래스"
      },
      "GroupPostResponse": {
        "type": "object",
        "properties": {
          "groupId": { "type": "integer", "format": "int64" },
          "name": { "type": "string" },
          "description": { "type": "string" },
          "groupImageURL": { "type": "string" },
          "tags": { "type": "array", "items": { "type": "string" } }
        }
      },
      "ApiSuccessResponseGroupJoinResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": { "type": "boolean" },
          "data": { "$ref": "#/components/schemas/GroupJoinResponse" }
        },
        "description": "API 에러 응답을 감싸는 클래스"
      },
      "GroupJoinResponse": {
        "type": "object",
        "properties": {
          "groupId": { "type": "integer", "format": "int64" },
          "memberId": { "type": "integer", "format": "int64" },
          "memberName": { "type": "string" },
          "isAccepted": { "type": "boolean" }
        }
      },
      "ActivityPostRequest": {
        "required": ["bookId", "endTime", "startTime"],
        "type": "object",
        "properties": {
          "bookId": { "type": "integer", "format": "int64" },
          "startTime": { "type": "string", "format": "date" },
          "endTime": { "type": "string", "format": "date" },
          "description": { "type": "string" }
        }
      },
      "ActivityPostResponse": {
        "type": "object",
        "properties": {
          "activityId": { "type": "integer", "format": "int64" },
          "bookId": { "type": "integer", "format": "int64" },
          "startTime": { "type": "string", "format": "date" },
          "endTime": { "type": "string", "format": "date" },
          "description": { "type": "string" }
        }
      },
      "ApiSuccessResponseActivityPostResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": { "type": "boolean" },
          "data": { "$ref": "#/components/schemas/ActivityPostResponse" }
        },
        "description": "API 에러 응답을 감싸는 클래스"
      },
      "ApiSuccessResponseString": {
        "type": "object",
        "properties": {
          "isSuccessful": { "type": "boolean" },
          "data": { "type": "string" }
        },
        "description": "API 에러 응답을 감싸는 클래스"
      },
      "DiscussionCommentPostRequest": {
        "required": ["content", "stance"],
        "type": "object",
        "properties": {
          "parentId": { "type": "integer", "format": "int64" },
          "content": { "type": "string" },
          "stance": {
            "type": "string",
            "enum": ["AGREE", "DISAGREE", "NEUTRAL"]
          }
        }
      },
      "DiscussionCommentFetchResponse": {
        "type": "object",
        "properties": {
          "commentId": { "type": "integer", "format": "int64" },
          "authorId": { "type": "integer", "format": "int64" },
          "authorName": { "type": "string" },
          "authorProfileImageURL": { "type": "string" },
          "content": { "type": "string" },
          "createdAt": { "type": "string", "format": "date-time" },
          "modifiedAt": { "type": "string", "format": "date-time" },
          "isEdited": { "type": "boolean" },
          "isDeleted": { "type": "boolean" },
          "stance": {
            "type": "string",
            "enum": ["AGREE", "DISAGREE", "NEUTRAL"]
          },
          "parentId": { "type": "integer", "format": "int64" },
          "replies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiscussionCommentFetchResponse"
            }
          }
        }
      },
      "EbookPostRequest": {
        "required": ["author", "file", "title"],
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "책 제목",
            "example": "이상한 나라의 앨리스"
          },
          "author": {
            "type": "string",
            "description": "책 저자",
            "example": "루이스 캐럴"
          },
          "description": {
            "type": "string",
            "description": "책 설명",
            "example": "《이상한 나라의 앨리스》는 영국의 수학자이자 작가인 찰스 루트위지 도지슨이 루이스 캐럴이라는 필명으로 1865년에 발표한 소설이다."
          },
          "file": { "type": "string", "format": "binary" },
          "coverImageFile": { "type": "string", "format": "binary" }
        },
        "description": "전자책 업로드 요청 데이터"
      },
      "ApiSuccessResponseEbookPostResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": { "type": "boolean" },
          "data": { "$ref": "#/components/schemas/EbookPostResponse" }
        },
        "description": "API 에러 응답을 감싸는 클래스"
      },
      "EbookPostResponse": {
        "type": "object",
        "properties": {
          "bookId": { "type": "integer", "format": "int64" },
          "title": { "type": "string" },
          "author": { "type": "string" },
          "description": { "type": "string" },
          "coverImageURL": { "type": "string" }
        }
      },
      "RejectPublisherRequest": {
        "required": ["reason"],
        "type": "object",
        "properties": { "reason": { "type": "string" } }
      },
      "DiscussionPostRequest": {
        "required": ["content", "isDebate", "title"],
        "type": "object",
        "properties": {
          "title": { "type": "string" },
          "content": { "type": "string" },
          "isDebate": { "type": "boolean" }
        }
      },
      "DiscussionFetchResponse": {
        "type": "object",
        "properties": {
          "discussionId": { "type": "integer", "format": "int64" },
          "activityId": { "type": "integer", "format": "int64" },
          "title": { "type": "string" },
          "content": { "type": "string" },
          "authorId": { "type": "integer", "format": "int64" },
          "authorName": { "type": "string" },
          "authorProfileImage": { "type": "string" },
          "createdAt": { "type": "string", "format": "date-time" },
          "modifiedAt": { "type": "string", "format": "date-time" },
          "commentCount": { "type": "integer", "format": "int64" },
          "isDebate": { "type": "boolean" },
          "isAuthor": { "type": "boolean" }
        }
      },
      "HighlightPutRequest": {
        "type": "object",
        "properties": {
          "activityId": { "type": "integer", "format": "int64" },
          "memo": { "type": "string" }
        }
      },
      "GroupPatchRequest": {
        "type": "object",
        "properties": {
          "description": { "type": "string" },
          "groupImage": { "type": "string", "format": "binary" }
        }
      },
      "ActivityPatchRequest": {
        "required": ["activityId"],
        "type": "object",
        "properties": {
          "activityId": { "type": "integer", "format": "int64" },
          "startTime": { "type": "string", "format": "date" },
          "endTime": { "type": "string", "format": "date" },
          "description": { "type": "string" }
        }
      },
      "DiscussionPatchRequest": {
        "type": "object",
        "properties": {
          "title": { "type": "string" },
          "content": { "type": "string" },
          "isDebate": { "type": "boolean" }
        }
      },
      "DiscussionCommentPatchRequest": {
        "type": "object",
        "properties": { "content": { "type": "string" } }
      },
      "ApiSuccessResponseUserInfoResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": { "type": "boolean" },
          "data": { "$ref": "#/components/schemas/UserInfoResponse" }
        },
        "description": "API 에러 응답을 감싸는 클래스"
      },
      "UserInfoResponse": {
        "type": "object",
        "properties": {
          "userId": { "type": "integer", "format": "int64" },
          "nickname": { "type": "string" },
          "profileImageURL": { "type": "string" }
        }
      },
      "ApiSuccessResponsePublisherInfoResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": { "type": "boolean" },
          "data": { "$ref": "#/components/schemas/PublisherInfoResponse" }
        },
        "description": "API 에러 응답을 감싸는 클래스"
      },
      "PublisherInfoResponse": {
        "type": "object",
        "properties": {
          "publisherId": { "type": "integer", "format": "int64" },
          "publisherName": { "type": "string" },
          "profileImageURL": { "type": "string" },
          "status": { "type": "string" },
          "createdAt": { "type": "string", "format": "date-time" }
        }
      },
      "ApiSuccessResponsePageResponseHighlightFetchResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": { "type": "boolean" },
          "data": {
            "$ref": "#/components/schemas/PageResponseHighlightFetchResponse"
          }
        },
        "description": "API 에러 응답을 감싸는 클래스"
      },
      "HighlightFetchResponse": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "bookId": { "type": "integer", "format": "int64" },
          "spine": { "type": "string" },
          "cfi": { "type": "string" },
          "memo": { "type": "string" },
          "activityId": { "type": "integer", "format": "int64" }
        }
      },
      "PageResponseHighlightFetchResponse": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/HighlightFetchResponse" }
          },
          "currentPage": { "type": "integer", "format": "int32" },
          "totalItems": { "type": "integer", "format": "int64" },
          "totalPages": { "type": "integer", "format": "int32" }
        }
      },
      "ApiSuccessResponseListReactionResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": { "type": "boolean" },
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/ReactionResponse" }
          }
        },
        "description": "API 에러 응답을 감싸는 클래스"
      },
      "ApiSuccessResponseListCommentResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": { "type": "boolean" },
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/CommentResponse" }
          }
        },
        "description": "API 에러 응답을 감싸는 클래스"
      },
      "ApiSuccessResponsePageResponseGroupFetchResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": { "type": "boolean" },
          "data": {
            "$ref": "#/components/schemas/PageResponseGroupFetchResponse"
          }
        },
        "description": "API 에러 응답을 감싸는 클래스"
      },
      "GroupFetchResponse": {
        "type": "object",
        "properties": {
          "groupId": { "type": "integer", "format": "int64" },
          "name": { "type": "string" },
          "description": { "type": "string" },
          "tags": { "type": "array", "items": { "type": "string" } },
          "groupImageURL": { "type": "string" },
          "myMemberShipStatus": {
            "type": "string",
            "enum": ["PENDING", "JOINED", "NONE"]
          },
          "memberCount": { "type": "integer", "format": "int32" }
        }
      },
      "PageResponseGroupFetchResponse": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/GroupFetchResponse" }
          },
          "currentPage": { "type": "integer", "format": "int32" },
          "totalItems": { "type": "integer", "format": "int64" },
          "totalPages": { "type": "integer", "format": "int32" }
        }
      },
      "ApiSuccessResponsePageResponseGroupPendingMemberResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": { "type": "boolean" },
          "data": {
            "$ref": "#/components/schemas/PageResponseGroupPendingMemberResponse"
          }
        },
        "description": "API 에러 응답을 감싸는 클래스"
      },
      "GroupPendingMemberResponse": {
        "type": "object",
        "properties": {
          "userId": { "type": "integer", "format": "int64" },
          "nickname": { "type": "string" }
        }
      },
      "PageResponseGroupPendingMemberResponse": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupPendingMemberResponse"
            }
          },
          "currentPage": { "type": "integer", "format": "int32" },
          "totalItems": { "type": "integer", "format": "int64" },
          "totalPages": { "type": "integer", "format": "int32" }
        }
      },
      "ApiSuccessResponseGroupFetchResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": { "type": "boolean" },
          "data": { "$ref": "#/components/schemas/GroupFetchResponse" }
        },
        "description": "API 에러 응답을 감싸는 클래스"
      },
      "ActivityFetchResponse": {
        "type": "object",
        "properties": {
          "activityId": { "type": "integer", "format": "int64" },
          "bookId": { "type": "integer", "format": "int64" },
          "startTime": { "type": "string", "format": "date" },
          "endTime": { "type": "string", "format": "date" },
          "description": { "type": "string" }
        }
      },
      "ApiSuccessResponsePageResponseActivityFetchResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": { "type": "boolean" },
          "data": {
            "$ref": "#/components/schemas/PageResponseActivityFetchResponse"
          }
        },
        "description": "API 에러 응답을 감싸는 클래스"
      },
      "PageResponseActivityFetchResponse": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/ActivityFetchResponse" }
          },
          "currentPage": { "type": "integer", "format": "int32" },
          "totalItems": { "type": "integer", "format": "int64" },
          "totalPages": { "type": "integer", "format": "int32" }
        }
      },
      "DiscussionDetailResponse": {
        "type": "object",
        "properties": {
          "discussionId": { "type": "integer", "format": "int64" },
          "activityId": { "type": "integer", "format": "int64" },
          "title": { "type": "string" },
          "content": { "type": "string" },
          "authorId": { "type": "integer", "format": "int64" },
          "authorName": { "type": "string" },
          "authorProfileImage": { "type": "string" },
          "createdAt": { "type": "string", "format": "date-time" },
          "modifiedAt": { "type": "string", "format": "date-time" },
          "commentCount": { "type": "integer", "format": "int64" },
          "isDebate": { "type": "boolean" },
          "isAuthor": { "type": "boolean" },
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiscussionCommentFetchResponse"
            }
          }
        }
      },
      "ApiSuccessResponsePageResponseEbookFetchResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": { "type": "boolean" },
          "data": {
            "$ref": "#/components/schemas/PageResponseEbookFetchResponse"
          }
        },
        "description": "API 에러 응답을 감싸는 클래스"
      },
      "EbookFetchResponse": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "title": { "type": "string" },
          "bookCoverImageURL": { "type": "string" },
          "author": { "type": "string" },
          "description": { "type": "string" },
          "size": { "type": "integer", "format": "int64" }
        }
      },
      "PageResponseEbookFetchResponse": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/EbookFetchResponse" }
          },
          "currentPage": { "type": "integer", "format": "int32" },
          "totalItems": { "type": "integer", "format": "int64" },
          "totalPages": { "type": "integer", "format": "int32" }
        }
      },
      "EbookSearchRequest": {
        "type": "object",
        "properties": {
          "authorName": { "type": "string" },
          "bookTitle": { "type": "string" }
        }
      },
      "ApiSuccessResponsePageResponseEbookSearchResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": { "type": "boolean" },
          "data": {
            "$ref": "#/components/schemas/PageResponseEbookSearchResponse"
          }
        },
        "description": "API 에러 응답을 감싸는 클래스"
      },
      "EbookSearchResponse": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "title": { "type": "string" },
          "author": { "type": "string" },
          "coverImageUrl": { "type": "string" }
        }
      },
      "PageResponseEbookSearchResponse": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/EbookSearchResponse" }
          },
          "currentPage": { "type": "integer", "format": "int32" },
          "totalItems": { "type": "integer", "format": "int64" },
          "totalPages": { "type": "integer", "format": "int32" }
        }
      },
      "ApiSuccessResponseEbookDownloadResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": { "type": "boolean" },
          "data": { "$ref": "#/components/schemas/EbookDownloadResponse" }
        },
        "description": "API 에러 응답을 감싸는 클래스"
      },
      "EbookDownloadResponse": {
        "type": "object",
        "properties": { "presignedUrl": { "type": "string" } }
      },
      "ApiSuccessResponsePageResponseUserInfoResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": { "type": "boolean" },
          "data": {
            "$ref": "#/components/schemas/PageResponseUserInfoResponse"
          }
        },
        "description": "API 에러 응답을 감싸는 클래스"
      },
      "PageResponseUserInfoResponse": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/UserInfoResponse" }
          },
          "currentPage": { "type": "integer", "format": "int32" },
          "totalItems": { "type": "integer", "format": "int64" },
          "totalPages": { "type": "integer", "format": "int32" }
        }
      },
      "ApiSuccessResponsePageResponsePublisherInfoResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": { "type": "boolean" },
          "data": {
            "$ref": "#/components/schemas/PageResponsePublisherInfoResponse"
          }
        },
        "description": "API 에러 응답을 감싸는 클래스"
      },
      "PageResponsePublisherInfoResponse": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/PublisherInfoResponse" }
          },
          "currentPage": { "type": "integer", "format": "int32" },
          "totalItems": { "type": "integer", "format": "int64" },
          "totalPages": { "type": "integer", "format": "int32" }
        }
      },
      "PageResponseDiscussionFetchResponse": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/DiscussionFetchResponse" }
          },
          "currentPage": { "type": "integer", "format": "int32" },
          "totalItems": { "type": "integer", "format": "int64" },
          "totalPages": { "type": "integer", "format": "int32" }
        }
      }
    }
  }
}
