{
  "openapi": "3.0.1",
  "info": {
    "title": "Chaekit API",
    "description": "책잇 API 명세서",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Local Server"
    },
    {
      "url": "https://dev.api.chaekit.com",
      "description": "Development Server"
    },
    {
      "url": "https://api.chaekit.com",
      "description": "Production Server"
    }
  ],
  "security": [
    {
      "BearerAuth": []
    }
  ],
  "paths": {
    "/api/users/join": {
      "post": {
        "tags": ["user-controller"],
        "summary": "회원가입",
        "description": "회원가입을 진행합니다.",
        "operationId": "userJoin",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UserJoinRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseLoginResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/token/refresh": {
      "post": {
        "tags": ["token-controller"],
        "summary": "Access Token 재발급",
        "description": "Access Token이 만료되었을 때, 유효한 Refresh Token을 통해 새로운 Access Token을 발급받는 API",
        "operationId": "refreshAccessToken",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseRefreshTokenResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/reading-progress/{bookId}/save": {
      "post": {
        "tags": ["reading-progress-controller"],
        "operationId": "saveMyProgress",
        "parameters": [
          {
            "name": "bookId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReadingProgressRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseVoid"
                }
              }
            }
          }
        }
      }
    },
    "/api/publishers/join": {
      "post": {
        "tags": ["publisher-controller"],
        "operationId": "publisherJoin",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PublisherJoinRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseLoginResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/logout": {
      "post": {
        "tags": ["token-controller"],
        "summary": "로그아웃",
        "description": "로그아웃 요청 시 기존 Refresh Token을 무효화합니다.",
        "operationId": "logout",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseVoid"
                }
              }
            }
          }
        }
      }
    },
    "/api/login": {
      "post": {
        "tags": ["login-filter-controller"],
        "summary": "로그인",
        "description": "Spring Security가 처리하는 로그인 API",
        "operationId": "login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseLoginResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/highlights": {
      "get": {
        "tags": ["highlight-controller"],
        "operationId": "getHighlights",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "activityId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "bookId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "spine",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "me",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponsePageResponseHighlightFetchResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["highlight-controller"],
        "operationId": "createHighlight",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HighlightPostRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseHighlightPostResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/highlights/{highlightId}/reactions": {
      "get": {
        "tags": ["highlight-controller"],
        "operationId": "getHighlightReactions",
        "parameters": [
          {
            "name": "highlightId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseListHighlightReactionResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["highlight-reaction-controller"],
        "operationId": "addReaction",
        "parameters": [
          {
            "name": "highlightId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HighlightReactionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseHighlightReactionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/highlights/{highlightId}/comments": {
      "get": {
        "tags": ["highlight-comment-controller"],
        "operationId": "getComments",
        "parameters": [
          {
            "name": "highlightId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseListHighlightCommentResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["highlight-comment-controller"],
        "operationId": "createComment",
        "parameters": [
          {
            "name": "highlightId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HighlightCommentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseHighlightCommentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/groups": {
      "get": {
        "tags": ["group-controller"],
        "summary": "모임 목록 조회",
        "description": "모임 목록을 조회합니다. 태그로 필터링할 수 있습니다. 정렬 기준은 MEMBER_COUNT(가입자 수), CREATED_AT(최신 생성 순) 중 선택할 수 있습니다.",
        "operationId": "getAllGroups",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "tags",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "MEMBER_COUNT",
              "enum": ["MEMBER_COUNT", "CREATED_AT"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponsePageResponseGroupFetchResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["group-controller"],
        "operationId": "createGroup",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/GroupPostRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseGroupPostResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/groups/{groupId}/reviews": {
      "get": {
        "tags": ["group-review-controller"],
        "summary": "모임 리뷰 목록 조회",
        "description": "모임의 리뷰 목록을 조회합니다.",
        "operationId": "getReviews",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponsePageResponseGroupReviewFetchResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["group-review-controller"],
        "summary": "모임 리뷰 작성",
        "description": "모임에 새로운 리뷰를 작성하거나 내용 및 태그를 수정합니다.",
        "operationId": "createReview",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupReviewPostRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseGroupReviewFetchResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/groups/{groupId}/members/{userId}/kick": {
      "post": {
        "tags": ["group-controller"],
        "summary": "모임 멤버 추방",
        "description": "모임장만 멤버를 추방할 수 있습니다.",
        "operationId": "kickGroupMember",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "성공",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseVoid"
                }
              }
            }
          },
          "403": {
            "description": "다음과 같은 비즈니스 에러 발생 가능:\n- GROUP_LEADER_ONLY\n",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseVoid"
                }
              }
            }
          },
          "400": {
            "description": "다음과 같은 비즈니스 에러 발생 가능:\n- GROUP_LEADER_CANNOT_LEAVE\n- GROUP_MEMBER_NOT_JOINED\n",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseVoid"
                }
              }
            }
          }
        }
      }
    },
    "/api/groups/{groupId}/join": {
      "post": {
        "tags": ["group-controller"],
        "operationId": "requestJoinGroup",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseGroupJoinResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/groups/{groupId}/chats": {
      "get": {
        "tags": ["group-chat-controller"],
        "summary": "모임 채팅 메시지 목록 조회",
        "description": "모임의 채팅 메시지 목록을 조회합니다.",
        "operationId": "getChats",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponsePageResponseGroupChatResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["group-chat-controller"],
        "summary": "모임 채팅 메시지 작성",
        "description": "모임에 새로운 채팅 메시지를 작성합니다.",
        "operationId": "createChat",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupChatRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseGroupChatResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/groups/{groupId}/activities": {
      "get": {
        "tags": ["activity-controller"],
        "operationId": "getAllActivities",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponsePageResponseActivityFetchResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["activity-controller"],
        "operationId": "createActivity",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityPostRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseActivityPostResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["activity-controller"],
        "operationId": "updateActivity",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityPatchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseActivityPostResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/email-verification/send-verification-code": {
      "post": {
        "tags": ["email-verification-controller"],
        "summary": "인증 코드 발송",
        "description": "이메일로 인증 코드를 생성하여 발송하는 API입니다. 생성된 인증 코드는 Redis에 저장되며, 유효 기간은 30분입니다.",
        "operationId": "sendVerificationCode",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseString"
                }
              }
            }
          }
        }
      }
    },
    "/api/discussions/{discussionId}/comments": {
      "post": {
        "tags": ["discussion-controller"],
        "summary": "토론 댓글 작성",
        "description": "토론 게시글에 토론 댓글을 작성합니다.",
        "operationId": "addComment",
        "parameters": [
          {
            "name": "discussionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiscussionCommentPostRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseDiscussionCommentFetchResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/credits/payment/success": {
      "post": {
        "tags": ["credit-controller"],
        "summary": "카카오페이 결제 승인",
        "description": "카카오페이 결제 승인 후, 결제 정보를 저장합니다. (결제 승인)",
        "operationId": "kakaoPaySuccess",
        "parameters": [
          {
            "name": "pg_token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseCreditPaymentApproveResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/credits/payment/ready": {
      "post": {
        "tags": ["credit-controller"],
        "summary": "카카오페이 결제 redirect URL 요청",
        "description": "특정 크레딧 상품에 대해 카카오페이 결제를 요청합니다. (결제 준비)",
        "operationId": "requestKakaoPay",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreditPaymentReadyRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseString"
                }
              }
            }
          }
        }
      }
    },
    "/api/books": {
      "get": {
        "tags": ["ebook-controller"],
        "summary": "전자책 목록 조회",
        "description": "전자책 목록을 페이지네이션하여 조회합니다.",
        "operationId": "getBooks",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "title",
            "in": "query",
            "description": "책 제목",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "author",
            "in": "query",
            "description": "작가명",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponsePageResponseEbookFetchResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["ebook-controller"],
        "summary": "전자책 업로드",
        "description": "출판사가 전자책 파일과 정보를 업로드합니다.",
        "operationId": "uploadFile",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/EbookPostRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseEbookPostResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/books/{ebookId}/view": {
      "post": {
        "tags": ["ebook-controller"],
        "summary": "전자책 조회수 증가",
        "description": "사용자가 전자책을 조회할 때마다 조회수를 증가시킵니다.",
        "operationId": "incrementEbookViewCount",
        "parameters": [
          {
            "name": "ebookId",
            "in": "path",
            "description": "조회할 전자책 ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseVoid"
                }
              }
            }
          }
        }
      }
    },
    "/api/books/{bookId}/purchase": {
      "post": {
        "tags": ["ebook-purchase-controller"],
        "summary": "전자책 구매",
        "description": "보유한 크레딧으로 전자책을 구매합니다.",
        "operationId": "purchaseEbook",
        "parameters": [
          {
            "name": "bookId",
            "in": "path",
            "description": "전자책 ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseEbookPurchaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/book-requests/{requestId}/reject": {
      "post": {
        "tags": ["ebook-request-controller"],
        "summary": "출판물 요청 승인",
        "description": "출판사의 출판물 요청을 승인합니다. 관리자가 요청을 승인할 수 있습니다.",
        "operationId": "rejectRequest",
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "description": "승인할 출판물 요청 ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EbookRequestRejectRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseVoid"
                }
              }
            }
          }
        }
      }
    },
    "/api/book-requests/{requestId}/approve": {
      "post": {
        "tags": ["ebook-request-controller"],
        "summary": "출판물 요청 승인",
        "description": "출판사의 출판물 요청을 승인합니다. 관리자가 요청을 승인할 수 있습니다.",
        "operationId": "approveRequest",
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "description": "승인할 출판물 요청 ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseVoid"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/publishers/{publisherId}/reject": {
      "post": {
        "tags": ["admin-controller"],
        "summary": "출판사 거절",
        "description": "사유를 제시하며 출판사를 거절합니다.",
        "operationId": "rejectPublisher",
        "parameters": [
          {
            "name": "publisherId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RejectPublisherRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseVoid"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/publishers/{publisherId}/accept": {
      "post": {
        "tags": ["admin-controller"],
        "summary": "출판사 승인",
        "description": "출판사를 승인합니다.",
        "operationId": "acceptPublisher",
        "parameters": [
          {
            "name": "publisherId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseVoid"
                }
              }
            }
          }
        }
      }
    },
    "/api/activities/{activityId}/leave": {
      "post": {
        "tags": ["activity-controller"],
        "summary": "모임 활동 탈퇴",
        "description": "모임 활동에서 탈퇴합니다.",
        "operationId": "leaveActivity",
        "parameters": [
          {
            "name": "activityId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseVoid"
                }
              }
            }
          }
        }
      }
    },
    "/api/activities/{activityId}/join": {
      "post": {
        "tags": ["activity-controller"],
        "summary": "모임 활동 가입",
        "description": "모임 활동에 가입합니다.",
        "operationId": "joinActivity",
        "parameters": [
          {
            "name": "activityId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseVoid"
                }
              }
            }
          }
        }
      }
    },
    "/api/activities/{activityId}/discussions": {
      "get": {
        "tags": ["discussion-controller"],
        "summary": "토론 목록 조회",
        "description": "특정 활동에 해당하는 토론 목록을 조회합니다.",
        "operationId": "getDiscussions",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "activityId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponsePageResponseDiscussionFetchResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["discussion-controller"],
        "summary": "토론 생성",
        "description": "특정 활동에 새로운 토론을 생성합니다.",
        "operationId": "createDiscussion",
        "parameters": [
          {
            "name": "activityId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiscussionPostRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseDiscussionFetchResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/publisher/notifications/{notificationId}/read": {
      "patch": {
        "tags": ["publisher-notification-controller"],
        "summary": "출판사 알림 읽음 처리",
        "operationId": "markAsRead",
        "parameters": [
          {
            "name": "notificationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseVoid"
                }
              }
            }
          }
        }
      }
    },
    "/api/notifications/{notificationId}/read": {
      "patch": {
        "tags": ["notification-controller"],
        "summary": "알림 읽음 처리",
        "operationId": "markAsRead_1",
        "parameters": [
          {
            "name": "notificationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseVoid"
                }
              }
            }
          }
        }
      }
    },
    "/api/highlights/{id}": {
      "get": {
        "tags": ["highlight-controller"],
        "operationId": "getHighlight",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseHighlightFetchResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["highlight-controller"],
        "operationId": "deleteHighlight",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseString"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["highlight-controller"],
        "operationId": "updateHighlight",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HighlightPutRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseHighlightPostResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/highlights/comments/{commentId}": {
      "delete": {
        "tags": ["highlight-comment-controller"],
        "operationId": "deleteComment",
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseString"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["highlight-comment-controller"],
        "operationId": "updateComment",
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HighlightCommentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseHighlightCommentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/groups/{groupId}": {
      "delete": {
        "tags": ["group-controller"],
        "summary": "모임 삭제",
        "description": "모임지기가 하이라이트 연결을 끊고 모임과 자식 엔티티를 삭제할 수 있습니다.",
        "operationId": "deleteGroup",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "성공",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseVoid"
                }
              }
            }
          },
          "403": {
            "description": "다음과 같은 비즈니스 에러 발생 가능:\n- GROUP_LEADER_ONLY\n",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseVoid"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["group-controller"],
        "operationId": "updateGroup",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/GroupPatchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseGroupPostResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/groups/{groupId}/members/{userId}/reject": {
      "patch": {
        "tags": ["group-controller"],
        "operationId": "rejectJoinRequest",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseVoid"
                }
              }
            }
          }
        }
      }
    },
    "/api/groups/{groupId}/members/{userId}/approve": {
      "patch": {
        "tags": ["group-controller"],
        "operationId": "approveJoinRequest",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseGroupJoinResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/discussions/{discussionId}": {
      "get": {
        "tags": ["discussion-controller"],
        "summary": "토론 상세 조회",
        "description": "특정 토론에 대해 댓글 등을 포함한 상세 정보를 조회합니다.",
        "operationId": "getDiscussion",
        "parameters": [
          {
            "name": "discussionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseDiscussionDetailResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["discussion-controller"],
        "summary": "토론 삭제",
        "description": "토론을 삭제합니다.",
        "operationId": "deleteDiscussion",
        "parameters": [
          {
            "name": "discussionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseVoid"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["discussion-controller"],
        "summary": "토론 수정",
        "description": "토론 제목, 내용, 찬반 여부를 수정합니다.",
        "operationId": "updateDiscussion",
        "parameters": [
          {
            "name": "discussionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiscussionPatchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseDiscussionFetchResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/discussions/comments/{commentId}": {
      "get": {
        "tags": ["discussion-controller"],
        "summary": "토론 댓글 단건 조회",
        "description": "토론 댓글을 조회합니다.",
        "operationId": "getComment",
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseDiscussionCommentFetchResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["discussion-controller"],
        "summary": "토론 댓글 삭제",
        "description": "토론 댓글을 삭제합니다.",
        "operationId": "deleteComment_1",
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseVoid"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["discussion-controller"],
        "summary": "토론 댓글 수정",
        "description": "토론 댓글의 내용을 수정합니다.",
        "operationId": "updateComment_1",
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiscussionCommentPatchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseDiscussionCommentFetchResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api": {
      "get": {
        "tags": ["main-controller"],
        "operationId": "mainApi",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseString"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/me": {
      "get": {
        "tags": ["user-controller"],
        "summary": "내 계정 정보 조회",
        "description": "내 계정 정보를 조회합니다.",
        "operationId": "userInfo",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseUserInfoResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/me/highlights": {
      "get": {
        "tags": ["user-controller"],
        "summary": "내 하이라이트 조회",
        "description": "내가 작성한 하이라이트를 조회합니다.",
        "operationId": "getMyHighlights",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "bookId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponsePageResponseHighlightFetchResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/me/groups": {
      "get": {
        "tags": ["user-controller"],
        "summary": "내 모임 조회",
        "description": "내가 가입한 모든 모임을 조회합니다.",
        "operationId": "getMyGroups",
        "parameters": [
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponsePageResponseGroupFetchResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/me/activities": {
      "get": {
        "tags": ["user-controller"],
        "summary": "내 활동 조회",
        "description": "내가 가입한 모든 활동을 조회합니다.",
        "operationId": "getMyActivities",
        "parameters": [
          {
            "name": "bookId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponsePageResponseActivityFetchResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/statistics": {
      "get": {
        "tags": ["statistics-controller"],
        "summary": "모임 통계 조회",
        "description": "모임의 통계 정보를 조회합니다. 총 모임 수, 총 사용자 수, 총 전자책 수, 총 활동 수, 최근 한 달간 증가한 활동 수를 포함합니다.",
        "operationId": "getMainStatistics",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseMainStatisticResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/reading-progress/{bookId}": {
      "get": {
        "tags": ["reading-progress-controller"],
        "operationId": "getMyProgress",
        "parameters": [
          {
            "name": "bookId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseReadingProgressResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/reading-progress/activities/{activityId}": {
      "get": {
        "tags": ["reading-progress-controller"],
        "summary": "모든 활동 멤버의 독서 진행률 조회",
        "description": "특정 독서모임 활동에 속하는 모든 사용자의 진행률 정보를 가져옵니다",
        "operationId": "getProgressFromActivity",
        "parameters": [
          {
            "name": "activityId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponsePageResponseReadingProgressResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/reading-progress/activities/{activityId}/history": {
      "get": {
        "tags": ["reading-progress-controller"],
        "operationId": "getProgressHistory",
        "parameters": [
          {
            "name": "activityId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseListReadingProgressHistoryResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/publishers/stats": {
      "get": {
        "tags": ["publisher-controller"],
        "operationId": "getPublisherStats",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponsePublisherStatsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/publishers/me": {
      "get": {
        "tags": ["publisher-controller"],
        "operationId": "publisherInfo",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponsePublisherInfoResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/publishers/me/books": {
      "get": {
        "tags": ["publisher-controller"],
        "operationId": "getPublisherBooks",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponsePageResponseEbookFetchResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/publisher/notifications": {
      "get": {
        "tags": ["publisher-notification-controller"],
        "summary": "출판사 알림 목록 조회",
        "operationId": "getNotifications",
        "parameters": [
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponsePageResponseNotificationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/notifications": {
      "get": {
        "tags": ["notification-controller"],
        "summary": "알림 목록 조회",
        "operationId": "getNotifications_1",
        "parameters": [
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponsePageResponseNotificationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/groups/{groupId}/reviews/stats": {
      "get": {
        "tags": ["group-review-controller"],
        "summary": "모임 리뷰 통계 조회",
        "description": "모임의 리뷰 통계를 조회합니다.",
        "operationId": "getReviewStats",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseGroupReviewStatsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/groups/{groupId}/members": {
      "get": {
        "tags": ["group-controller"],
        "summary": "특정 그룹의 멤버 목록 조회",
        "description": "특정 그룹에서 가입된 + 대기중인 멤버 목록을 조회합니다.",
        "operationId": "getGroupMembers",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponsePageResponseGroupMemberResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/groups/{groupId}/members/pending": {
      "get": {
        "tags": ["group-controller"],
        "operationId": "getPendingList",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponsePageResponseGroupMemberResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/groups/{groupId}/info": {
      "get": {
        "tags": ["group-controller"],
        "operationId": "getGroup",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseGroupFetchResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/groups/my/joined": {
      "get": {
        "tags": ["group-controller"],
        "summary": "내가 가입한 모임 목록 조회",
        "description": "내가 가입한 모임 목록을 조회합니다.",
        "operationId": "getJoinedGroups",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponsePageResponseGroupFetchResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/groups/my/created": {
      "get": {
        "tags": ["group-controller"],
        "summary": "내가 생성한 모임 목록 조회",
        "description": "내가 생성한 모임 목록을 조회합니다.",
        "operationId": "getCreatedGroups",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponsePageResponseGroupFetchResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/email-verification/verify-code": {
      "get": {
        "tags": ["email-verification-controller"],
        "summary": "인증 코드 검증",
        "description": "사용자가 입력한 인증 코드를 검증합니다. 올바른 코드일 경우 인증 성공 메시지를 반환하고, 실패하면 400 에러를 반환합니다.",
        "operationId": "verifyCode",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "verificationCode",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseString"
                }
              }
            }
          }
        }
      }
    },
    "/api/credits": {
      "get": {
        "tags": ["credit-controller"],
        "summary": "크레딧 상품 목록 조회",
        "description": "크레딧 상품 목록을 조회합니다. (구매 가능 상품만 조회)",
        "operationId": "getCreditProductList",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseListCreditProductInfoResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/credits/wallets": {
      "get": {
        "tags": ["credit-controller"],
        "summary": "내 크레딧 지갑 조회",
        "description": "내 크레딧 지갑 정보를 조회합니다.",
        "operationId": "getMyWallet",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseCreditWalletResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/credits/transactions": {
      "get": {
        "tags": ["credit-controller"],
        "summary": "내 크레딧 거래 내역 조회",
        "description": "내 크레딧 거래 내역을 조회합니다. (구매, 사용 내역 포함)",
        "operationId": "getMyWalletTransactions",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponsePageResponseCreditTransactionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/books/{ebookId}": {
      "get": {
        "tags": ["ebook-controller"],
        "summary": "전자책 상세 조회",
        "description": "전자책의 상세 정보를 조회합니다.",
        "operationId": "getBook",
        "parameters": [
          {
            "name": "ebookId",
            "in": "path",
            "description": "조회할 전자책 ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseEbookFetchResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/books/{ebookId}/publisher-download": {
      "get": {
        "tags": ["ebook-controller"],
        "summary": "출판사용 전자책 다운로드 URL 생성",
        "description": "출판사가 자신이 업로드한 전자책을 다운로드하기 위한 URL을 생성합니다.",
        "operationId": "getPresignedEbookUrlForPublisher",
        "parameters": [
          {
            "name": "ebookId",
            "in": "path",
            "description": "다운로드할 전자책 ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseEbookDownloadResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/books/{ebookId}/download": {
      "get": {
        "tags": ["ebook-controller"],
        "summary": "전자책 다운로드 URL 생성",
        "description": "책을 구매한 사용자에게 전자책 다운로드를 위한 URL을 생성합니다.",
        "operationId": "getPresignedEbookUrlForUser",
        "parameters": [
          {
            "name": "ebookId",
            "in": "path",
            "description": "다운로드할 전자책 ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseEbookDownloadResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/books/my": {
      "get": {
        "tags": ["ebook-purchase-controller"],
        "summary": "내 전자책 목록 조회",
        "description": "내가 구매한 전자책 목록을 페이지네이션하여 조회합니다.",
        "operationId": "getMyBooks",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponsePageResponseEbookFetchResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/book-requests": {
      "get": {
        "tags": ["ebook-request-controller"],
        "summary": "출판물 요청 목록 조회",
        "description": "대기중인 출판물 목록을 조회합니다. 출판사는 자신의 요청만 조회할 수 있습니다.",
        "operationId": "getEbookRequests",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponsePageResponseEbookRequestFetchResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/book-requests/{requestId}/download": {
      "get": {
        "tags": ["ebook-request-controller"],
        "summary": "요청된 출판물 다운로드",
        "description": "출판사 또는 관리자가 출판물을 미리 다운로드합니다.",
        "operationId": "download",
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "description": "승인할 출판물 요청 ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseEbookDownloadResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/users": {
      "get": {
        "tags": ["admin-controller"],
        "summary": "유저 목록 조회",
        "description": "모든 유저 목록을 확인할 수 있습니다.",
        "operationId": "fetchUsers",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponsePageResponseUserInfoResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/publishers": {
      "get": {
        "tags": ["admin-controller"],
        "summary": "출판사 목록 조회",
        "description": "모든 출판사 목록을 확인할 수 있습니다.",
        "operationId": "fetchPublishers",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponsePageResponsePublisherInfoResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/publishers/pending": {
      "get": {
        "tags": ["admin-controller"],
        "summary": "출판사 승인 대기 목록 조회",
        "description": "승인 대기 중인 출판사 목록을 확인할 수 있습니다.",
        "operationId": "fetchPendingList",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponsePageResponsePublisherInfoResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/activities/{activityId}": {
      "get": {
        "tags": ["activity-controller"],
        "operationId": "getActivity",
        "parameters": [
          {
            "name": "activityId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseActivityFetchResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/activities/{activityId}/scores": {
      "get": {
        "tags": ["activity-controller"],
        "summary": "상위 5명의 활동 점수 조회",
        "description": "활동에 참여한 유저들의 활동 점수를 조회합니다. 점수는 하이라이트, 하이라이트 댓글, 토론, 토론 댓글의 개수에 따라 계산됩니다. 하이라이트는 3점, 하이라이트 댓글은 1점, 토론은 5점, 토론 댓글은 2점입니다.",
        "operationId": "getActivityTop5Scores",
        "parameters": [
          {
            "name": "activityId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseListActivityScoreResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/activities/{activityId}/highlights/recent": {
      "get": {
        "tags": ["activity-controller"],
        "summary": "최근 메모 조회",
        "description": "특정 활동에 등록된 최신 하이라이트 5개를 조회합니다.",
        "operationId": "getRecentHighlights",
        "parameters": [
          {
            "name": "activityId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseListHighlightPreviewResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/highlights/reactions/{reactionId}": {
      "delete": {
        "tags": ["highlight-reaction-controller"],
        "operationId": "deleteReaction",
        "parameters": [
          {
            "name": "reactionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseString"
                }
              }
            }
          }
        }
      }
    },
    "/api/groups/{groupId}/members/leave": {
      "delete": {
        "tags": ["group-controller"],
        "operationId": "leaveGroup",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseVoid"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "UserJoinRequest": {
        "required": ["email", "nickname", "password", "verificationCode"],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "nickname": {
            "type": "string"
          },
          "profileImage": {
            "type": "string",
            "format": "binary"
          },
          "verificationCode": {
            "type": "string"
          }
        }
      },
      "ApiSuccessResponseLoginResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/LoginResponse"
          }
        },
        "description": "API 에러 응답을 감싸는 클래스"
      },
      "LoginResponse": {
        "required": [
          "accessToken",
          "email",
          "memberId",
          "refreshToken",
          "role"
        ],
        "type": "object",
        "properties": {
          "memberId": {
            "type": "integer",
            "description": "회원 고유 ID",
            "format": "int64",
            "example": 1
          },
          "email": {
            "type": "string",
            "description": "회원 이메일",
            "example": "user@example.com"
          },
          "userId": {
            "type": "integer",
            "description": "일반 사용자 ID",
            "format": "int64",
            "example": 1
          },
          "nickname": {
            "type": "string",
            "description": "닉네임",
            "example": "booklover"
          },
          "publisherId": {
            "type": "integer",
            "description": "출판사 ID",
            "format": "int64",
            "example": 1
          },
          "publisherName": {
            "type": "string",
            "description": "출판사 이름",
            "example": "문학과지성사"
          },
          "profileImageURL": {
            "type": "string",
            "description": "프로필 이미지 URL",
            "example": "https://cdn.example.com/images/profile1.png"
          },
          "role": {
            "type": "string",
            "description": "회원 역할",
            "example": "ROLE_USER",
            "enum": ["ROLE_USER", "ROLE_PUBLISHER", "ROLE_ADMIN"]
          },
          "refreshToken": {
            "type": "string",
            "description": "Refresh Token (재발급용)",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "accessToken": {
            "type": "string",
            "description": "Access Token (API 인증용)",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          }
        }
      },
      "RefreshTokenRequest": {
        "required": ["refreshToken"],
        "type": "object",
        "properties": {
          "refreshToken": {
            "type": "string"
          }
        }
      },
      "ApiSuccessResponseRefreshTokenResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/RefreshTokenResponse"
          }
        },
        "description": "API 에러 응답을 감싸는 클래스"
      },
      "RefreshTokenResponse": {
        "type": "object",
        "properties": {
          "refreshToken": {
            "type": "string"
          },
          "accessToken": {
            "type": "string"
          }
        }
      },
      "ReadingProgressRequest": {
        "type": "object",
        "properties": {
          "cfi": {
            "type": "string"
          },
          "percentage": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ApiSuccessResponseVoid": {
        "type": "object",
        "properties": {
          "isSuccessful": {
            "type": "boolean"
          },
          "data": {
            "type": "object"
          }
        },
        "description": "API 에러 응답을 감싸는 클래스"
      },
      "PublisherJoinRequest": {
        "required": ["email", "password", "publisherName", "verificationCode"],
        "type": "object",
        "properties": {
          "publisherName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "profileImage": {
            "type": "string",
            "format": "binary"
          },
          "verificationCode": {
            "type": "string"
          }
        }
      },
      "LoginRequest": {
        "required": ["email", "password"],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "HighlightPostRequest": {
        "type": "object",
        "properties": {
          "bookId": {
            "type": "integer",
            "format": "int64"
          },
          "spine": {
            "type": "string"
          },
          "cfi": {
            "type": "string"
          },
          "activityId": {
            "type": "integer",
            "format": "int64"
          },
          "memo": {
            "type": "string"
          },
          "highlightContent": {
            "type": "string"
          }
        }
      },
      "ApiSuccessResponseHighlightPostResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/HighlightPostResponse"
          }
        },
        "description": "API 에러 응답을 감싸는 클래스"
      },
      "HighlightPostResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "bookId": {
            "type": "integer",
            "format": "int64"
          },
          "spine": {
            "type": "string"
          },
          "cfi": {
            "type": "string"
          },
          "memo": {
            "type": "string"
          },
          "activityId": {
            "type": "integer",
            "format": "int64"
          },
          "highlightContent": {
            "type": "string"
          }
        }
      },
      "HighlightReactionRequest": {
        "type": "object",
        "properties": {
          "commentId": {
            "type": "integer",
            "format": "int64"
          },
          "reactionType": {
            "type": "string",
            "enum": [
              "GREAT",
              "HEART",
              "SMILE",
              "CLAP",
              "SAD",
              "ANGRY",
              "SURPRISED"
            ]
          }
        }
      },
      "ApiSuccessResponseHighlightReactionResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/HighlightReactionResponse"
          }
        },
        "description": "API 에러 응답을 감싸는 클래스"
      },
      "HighlightReactionResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "authorId": {
            "type": "integer",
            "format": "int64"
          },
          "authorName": {
            "type": "string"
          },
          "reactionType": {
            "type": "string",
            "enum": [
              "GREAT",
              "HEART",
              "SMILE",
              "CLAP",
              "SAD",
              "ANGRY",
              "SURPRISED"
            ]
          },
          "emoji": {
            "type": "string"
          },
          "commentId": {
            "type": "integer",
            "format": "int64"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "HighlightCommentRequest": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string"
          },
          "parentId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ApiSuccessResponseHighlightCommentResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/HighlightCommentResponse"
          }
        },
        "description": "API 에러 응답을 감싸는 클래스"
      },
      "HighlightCommentResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "authorId": {
            "type": "integer",
            "format": "int64"
          },
          "authorName": {
            "type": "string"
          },
          "authorProfileImageURL": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "replies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HighlightCommentResponse"
            }
          },
          "reactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HighlightReactionResponse"
            }
          }
        }
      },
      "GroupPostRequest": {
        "required": ["description", "name"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "groupImage": {
            "type": "string",
            "format": "binary"
          },
          "autoApproval": {
            "type": "boolean"
          }
        }
      },
      "ApiSuccessResponseGroupPostResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/GroupPostResponse"
          }
        },
        "description": "API 에러 응답을 감싸는 클래스"
      },
      "GroupPostResponse": {
        "type": "object",
        "properties": {
          "groupId": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "groupImageURL": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "GroupReviewPostRequest": {
        "type": "object",
        "properties": {
          "activityId": {
            "type": "integer",
            "format": "int64"
          },
          "content": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "FUNNY",
                "CALM",
                "PASSIONATE",
                "HEARTWARMING",
                "DEEP_THOUGHT",
                "INSIGHTFUL",
                "DIVERSE_OPINIONS",
                "TALKATIVE",
                "GOOD_LISTENERS",
                "STRUCTURED",
                "CASUAL",
                "WELL_MODERATED"
              ]
            }
          }
        }
      },
      "ApiSuccessResponseGroupReviewFetchResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/GroupReviewFetchResponse"
          }
        },
        "description": "API 에러 응답을 감싸는 클래스"
      },
      "GroupReviewFetchResponse": {
        "type": "object",
        "properties": {
          "reviewId": {
            "type": "integer",
            "format": "int64"
          },
          "groupId": {
            "type": "integer",
            "format": "int64"
          },
          "groupName": {
            "type": "string"
          },
          "activityId": {
            "type": "integer",
            "format": "int64"
          },
          "activityStartTime": {
            "type": "string",
            "format": "date"
          },
          "activityEndTime": {
            "type": "string",
            "format": "date"
          },
          "bookId": {
            "type": "integer",
            "format": "int64"
          },
          "bookTitle": {
            "type": "string"
          },
          "bookAuthor": {
            "type": "string"
          },
          "bookCoverImageURL": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "authorId": {
            "type": "integer",
            "format": "int64"
          },
          "authorNickname": {
            "type": "string"
          },
          "authorProfileImageURL": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "FUNNY",
                "CALM",
                "PASSIONATE",
                "HEARTWARMING",
                "DEEP_THOUGHT",
                "INSIGHTFUL",
                "DIVERSE_OPINIONS",
                "TALKATIVE",
                "GOOD_LISTENERS",
                "STRUCTURED",
                "CASUAL",
                "WELL_MODERATED"
              ]
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "ApiSuccessResponseGroupJoinResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/GroupJoinResponse"
          }
        },
        "description": "API 에러 응답을 감싸는 클래스"
      },
      "GroupJoinResponse": {
        "type": "object",
        "properties": {
          "groupId": {
            "type": "integer",
            "format": "int64"
          },
          "memberId": {
            "type": "integer",
            "format": "int64"
          },
          "memberName": {
            "type": "string"
          },
          "isAccepted": {
            "type": "boolean"
          }
        }
      },
      "GroupChatRequest": {
        "required": ["content"],
        "type": "object",
        "properties": {
          "content": {
            "type": "string"
          }
        }
      },
      "ApiSuccessResponseGroupChatResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/GroupChatResponse"
          }
        },
        "description": "API 에러 응답을 감싸는 클래스"
      },
      "GroupChatResponse": {
        "type": "object",
        "properties": {
          "chatId": {
            "type": "integer",
            "format": "int64"
          },
          "groupId": {
            "type": "integer",
            "format": "int64"
          },
          "authorId": {
            "type": "integer",
            "format": "int64"
          },
          "authorName": {
            "type": "string"
          },
          "authorProfileImage": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ActivityPostRequest": {
        "required": ["bookId", "endTime", "startTime"],
        "type": "object",
        "properties": {
          "bookId": {
            "type": "integer",
            "format": "int64"
          },
          "startTime": {
            "type": "string",
            "format": "date"
          },
          "endTime": {
            "type": "string",
            "format": "date"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "ActivityPostResponse": {
        "type": "object",
        "properties": {
          "activityId": {
            "type": "integer",
            "format": "int64"
          },
          "bookId": {
            "type": "integer",
            "format": "int64"
          },
          "startTime": {
            "type": "string",
            "format": "date"
          },
          "endTime": {
            "type": "string",
            "format": "date"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "ApiSuccessResponseActivityPostResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/ActivityPostResponse"
          }
        },
        "description": "API 에러 응답을 감싸는 클래스"
      },
      "ApiSuccessResponseString": {
        "type": "object",
        "properties": {
          "isSuccessful": {
            "type": "boolean"
          },
          "data": {
            "type": "string"
          }
        },
        "description": "API 에러 응답을 감싸는 클래스"
      },
      "DiscussionCommentPostRequest": {
        "required": ["content", "stance"],
        "type": "object",
        "properties": {
          "parentId": {
            "type": "integer",
            "format": "int64"
          },
          "content": {
            "type": "string"
          },
          "stance": {
            "type": "string",
            "enum": ["AGREE", "DISAGREE", "NEUTRAL"]
          }
        }
      },
      "ApiSuccessResponseDiscussionCommentFetchResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/DiscussionCommentFetchResponse"
          }
        },
        "description": "API 에러 응답을 감싸는 클래스"
      },
      "DiscussionCommentFetchResponse": {
        "type": "object",
        "properties": {
          "commentId": {
            "type": "integer",
            "format": "int64"
          },
          "authorId": {
            "type": "integer",
            "format": "int64"
          },
          "authorName": {
            "type": "string"
          },
          "authorProfileImageURL": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "isEdited": {
            "type": "boolean"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "stance": {
            "type": "string",
            "enum": ["AGREE", "DISAGREE", "NEUTRAL"]
          },
          "parentId": {
            "type": "integer",
            "format": "int64"
          },
          "replies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiscussionCommentFetchResponse"
            }
          }
        }
      },
      "ApiSuccessResponseCreditPaymentApproveResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/CreditPaymentApproveResponse"
          }
        },
        "description": "API 에러 응답을 감싸는 클래스"
      },
      "CreditPaymentApproveResponse": {
        "type": "object",
        "properties": {
          "orderId": {
            "type": "string"
          },
          "creditProductId": {
            "type": "integer",
            "format": "int32"
          },
          "creditProductName": {
            "type": "string"
          },
          "paymentMethod": {
            "type": "string"
          },
          "paymentAmount": {
            "type": "integer",
            "format": "int32"
          },
          "approvedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CreditPaymentReadyRequest": {
        "type": "object",
        "properties": {
          "creditProductId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "EbookPostRequest": {
        "required": ["author", "file", "price", "title"],
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "책 제목",
            "example": "이상한 나라의 앨리스"
          },
          "author": {
            "type": "string",
            "description": "책 저자",
            "example": "루이스 캐럴"
          },
          "description": {
            "type": "string",
            "description": "책 설명",
            "example": "《이상한 나라의 앨리스》는 영국의 수학자이자 작가인 찰스 루트위지 도지슨이 루이스 캐럴이라는 필명으로 1865년에 발표한 소설이다."
          },
          "file": {
            "type": "string",
            "format": "binary"
          },
          "price": {
            "type": "integer",
            "description": "책 가격",
            "format": "int32",
            "example": 10000
          },
          "coverImageFile": {
            "type": "string",
            "format": "binary"
          }
        },
        "description": "전자책 업로드 요청 데이터"
      },
      "ApiSuccessResponseEbookPostResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/EbookPostResponse"
          }
        },
        "description": "API 에러 응답을 감싸는 클래스"
      },
      "EbookPostResponse": {
        "type": "object",
        "properties": {
          "requestId": {
            "type": "integer",
            "format": "int64"
          },
          "bookId": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string"
          },
          "author": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "coverImageURL": {
            "type": "string"
          }
        }
      },
      "ApiSuccessResponseEbookPurchaseResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/EbookPurchaseResponse"
          }
        },
        "description": "API 에러 응답을 감싸는 클래스"
      },
      "EbookPurchaseResponse": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "transactionId": {
            "type": "integer",
            "format": "int64"
          },
          "creditAmount": {
            "type": "integer",
            "format": "int32"
          },
          "bookId": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string"
          },
          "author": {
            "type": "string"
          },
          "presignedDownloadURL": {
            "type": "string"
          }
        }
      },
      "EbookRequestRejectRequest": {
        "type": "object",
        "properties": {
          "reason": {
            "type": "string"
          }
        }
      },
      "RejectPublisherRequest": {
        "required": ["reason"],
        "type": "object",
        "properties": {
          "reason": {
            "type": "string"
          }
        }
      },
      "DiscussionPostRequest": {
        "required": ["content", "isDebate", "title"],
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "isDebate": {
            "type": "boolean"
          },
          "highlightIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "ApiSuccessResponseDiscussionFetchResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/DiscussionFetchResponse"
          }
        },
        "description": "API 에러 응답을 감싸는 클래스"
      },
      "DiscussionFetchResponse": {
        "type": "object",
        "properties": {
          "discussionId": {
            "type": "integer",
            "format": "int64"
          },
          "activityId": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "authorId": {
            "type": "integer",
            "format": "int64"
          },
          "authorName": {
            "type": "string"
          },
          "authorProfileImage": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "commentCount": {
            "type": "integer",
            "format": "int64"
          },
          "highlightIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "isDebate": {
            "type": "boolean"
          },
          "isAuthor": {
            "type": "boolean"
          }
        }
      },
      "HighlightPutRequest": {
        "type": "object",
        "properties": {
          "activityId": {
            "type": "integer",
            "format": "int64"
          },
          "memo": {
            "type": "string"
          }
        }
      },
      "GroupPatchRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": {
            "type": "string"
          },
          "groupImage": {
            "type": "string",
            "format": "binary"
          },
          "autoApproval": {
            "type": "boolean"
          }
        }
      },
      "ActivityPatchRequest": {
        "required": ["activityId"],
        "type": "object",
        "properties": {
          "activityId": {
            "type": "integer",
            "format": "int64"
          },
          "startTime": {
            "type": "string",
            "format": "date"
          },
          "endTime": {
            "type": "string",
            "format": "date"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "DiscussionPatchRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "highlightIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "DiscussionCommentPatchRequest": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string"
          }
        }
      },
      "ApiSuccessResponseUserInfoResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/UserInfoResponse"
          }
        },
        "description": "API 에러 응답을 감싸는 클래스"
      },
      "UserInfoResponse": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "nickname": {
            "type": "string"
          },
          "profileImageURL": {
            "type": "string"
          }
        }
      },
      "ApiSuccessResponsePageResponseHighlightFetchResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/PageResponseHighlightFetchResponse"
          }
        },
        "description": "API 에러 응답을 감싸는 클래스"
      },
      "DiscussionSummaryResponse": {
        "type": "object",
        "properties": {
          "discussionId": {
            "type": "integer",
            "format": "int64"
          },
          "activityId": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string"
          },
          "authorId": {
            "type": "integer",
            "format": "int64"
          },
          "authorName": {
            "type": "string"
          }
        }
      },
      "HighlightFetchResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "bookId": {
            "type": "integer",
            "format": "int64"
          },
          "authorId": {
            "type": "integer",
            "format": "int64"
          },
          "authorName": {
            "type": "string"
          },
          "authorProfileImageURL": {
            "type": "string"
          },
          "spine": {
            "type": "string"
          },
          "cfi": {
            "type": "string"
          },
          "memo": {
            "type": "string"
          },
          "activityId": {
            "type": "integer",
            "format": "int64"
          },
          "linkedDiscussions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiscussionSummaryResponse"
            }
          },
          "highlightContent": {
            "type": "string"
          }
        }
      },
      "PageResponseHighlightFetchResponse": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HighlightFetchResponse"
            }
          },
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "totalItems": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Pageable": {
        "type": "object",
        "properties": {
          "page": {
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ApiSuccessResponsePageResponseGroupFetchResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/PageResponseGroupFetchResponse"
          }
        },
        "description": "API 에러 응답을 감싸는 클래스"
      },
      "GroupFetchResponse": {
        "type": "object",
        "properties": {
          "groupId": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "groupImageURL": {
            "type": "string"
          },
          "leaderId": {
            "type": "integer",
            "format": "int64"
          },
          "leaderNickname": {
            "type": "string"
          },
          "leaderProfileImageURL": {
            "type": "string"
          },
          "myMemberShipStatus": {
            "type": "string",
            "enum": ["OWNED", "PENDING", "JOINED", "NONE"]
          },
          "isAutoApproval": {
            "type": "boolean"
          },
          "memberCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "PageResponseGroupFetchResponse": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupFetchResponse"
            }
          },
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "totalItems": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ActivityFetchResponse": {
        "type": "object",
        "properties": {
          "activityId": {
            "type": "integer",
            "format": "int64"
          },
          "groupId": {
            "type": "integer",
            "format": "int64"
          },
          "bookId": {
            "type": "integer",
            "format": "int64"
          },
          "bookTitle": {
            "type": "string"
          },
          "bookAuthor": {
            "type": "string"
          },
          "coverImageURL": {
            "type": "string"
          },
          "bookDescription": {
            "type": "string"
          },
          "startTime": {
            "type": "string",
            "format": "date"
          },
          "endTime": {
            "type": "string",
            "format": "date"
          },
          "description": {
            "type": "string"
          },
          "isParticipant": {
            "type": "boolean"
          }
        }
      },
      "ApiSuccessResponsePageResponseActivityFetchResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/PageResponseActivityFetchResponse"
          }
        },
        "description": "API 에러 응답을 감싸는 클래스"
      },
      "PageResponseActivityFetchResponse": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityFetchResponse"
            }
          },
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "totalItems": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ApiSuccessResponseMainStatisticResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/MainStatisticResponse"
          }
        },
        "description": "API 에러 응답을 감싸는 클래스"
      },
      "MainStatisticResponse": {
        "type": "object",
        "properties": {
          "totalGroups": {
            "type": "integer",
            "format": "int64"
          },
          "totalUsers": {
            "type": "integer",
            "format": "int64"
          },
          "totalEbooks": {
            "type": "integer",
            "format": "int64"
          },
          "totalActivities": {
            "type": "integer",
            "format": "int64"
          },
          "increasedActivities": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ApiSuccessResponseReadingProgressResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/ReadingProgressResponse"
          }
        },
        "description": "API 에러 응답을 감싸는 클래스"
      },
      "ReadingProgressResponse": {
        "type": "object",
        "properties": {
          "bookId": {
            "type": "integer",
            "format": "int64"
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "userNickname": {
            "type": "string"
          },
          "userProfileImageURL": {
            "type": "string"
          },
          "cfi": {
            "type": "string"
          },
          "percentage": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ApiSuccessResponsePageResponseReadingProgressResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/PageResponseReadingProgressResponse"
          }
        },
        "description": "API 에러 응답을 감싸는 클래스"
      },
      "PageResponseReadingProgressResponse": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReadingProgressResponse"
            }
          },
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "totalItems": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ApiSuccessResponseListReadingProgressHistoryResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReadingProgressHistoryResponse"
            }
          }
        },
        "description": "API 에러 응답을 감싸는 클래스"
      },
      "ReadingProgressHistoryResponse": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date"
          },
          "myPercentage": {
            "type": "integer",
            "format": "int64"
          },
          "averagePercentage": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "ApiSuccessResponsePublisherStatsResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/PublisherStatsResponse"
          }
        },
        "description": "API 에러 응답을 감싸는 클래스"
      },
      "MonthlyRevenue": {
        "type": "object",
        "properties": {
          "month": {
            "type": "string"
          },
          "monthlyRevenue": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "PublisherStatsResponse": {
        "type": "object",
        "properties": {
          "totalSalesCount": {
            "type": "integer",
            "format": "int64"
          },
          "increasedSalesCount": {
            "type": "integer",
            "format": "int64"
          },
          "totalRevenue": {
            "type": "integer",
            "format": "int64"
          },
          "increasedRevenue": {
            "type": "integer",
            "format": "int64"
          },
          "totalActivityCount": {
            "type": "integer",
            "format": "int64"
          },
          "increasedActivityCount": {
            "type": "integer",
            "format": "int64"
          },
          "totalViewCount": {
            "type": "integer",
            "format": "int64"
          },
          "monthlyRevenueList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MonthlyRevenue"
            }
          },
          "increasedSalesCountsPerEbook": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SalesCountPerEbook"
            }
          },
          "statsPerEbookList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StatsPerEbook"
            }
          }
        }
      },
      "SalesCountPerEbook": {
        "type": "object",
        "properties": {
          "bookId": {
            "type": "integer",
            "format": "int64"
          },
          "bookName": {
            "type": "string"
          },
          "totalSalesCount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "StatsPerEbook": {
        "type": "object",
        "properties": {
          "bookId": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string"
          },
          "author": {
            "type": "string"
          },
          "bookCoverImageURL": {
            "type": "string"
          },
          "totalSalesCount": {
            "type": "integer",
            "format": "int64"
          },
          "totalRevenue": {
            "type": "integer",
            "format": "int64"
          },
          "viewCount": {
            "type": "integer",
            "format": "int64"
          },
          "activityCount": {
            "type": "integer",
            "format": "int64"
          },
          "createdAt": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "ApiSuccessResponsePublisherInfoResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/PublisherInfoResponse"
          }
        },
        "description": "API 에러 응답을 감싸는 클래스"
      },
      "PublisherInfoResponse": {
        "type": "object",
        "properties": {
          "publisherId": {
            "type": "integer",
            "format": "int64"
          },
          "publisherName": {
            "type": "string"
          },
          "profileImageURL": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ApiSuccessResponsePageResponseEbookFetchResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/PageResponseEbookFetchResponse"
          }
        },
        "description": "API 에러 응답을 감싸는 클래스"
      },
      "EbookFetchResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string"
          },
          "bookCoverImageURL": {
            "type": "string"
          },
          "author": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "size": {
            "type": "integer",
            "format": "int64"
          },
          "isPurchased": {
            "type": "boolean"
          },
          "price": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "PageResponseEbookFetchResponse": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EbookFetchResponse"
            }
          },
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "totalItems": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ApiSuccessResponsePageResponseNotificationResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/PageResponseNotificationResponse"
          }
        },
        "description": "API 에러 응답을 감싸는 클래스"
      },
      "NotificationResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "message": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "GROUP_JOIN_REQUEST",
              "GROUP_JOIN_APPROVED",
              "GROUP_JOIN_REJECTED",
              "PUBLISHER_JOIN_REQUEST",
              "PUBLISHER_APPROVED",
              "PUBLISHER_REJECTED",
              "DISCUSSION_COMMENT",
              "COMMENT_REPLY",
              "HIGHLIGHT_COMMENT",
              "HIGHLIGHT_COMMENT_REPLY",
              "GROUP_BANNED"
            ]
          },
          "isRead": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "senderId": {
            "type": "integer",
            "format": "int64"
          },
          "senderNickname": {
            "type": "string"
          },
          "groupId": {
            "type": "integer",
            "format": "int64"
          },
          "groupName": {
            "type": "string"
          },
          "highlightId": {
            "type": "integer",
            "format": "int64"
          },
          "highlightComments": {
            "type": "string"
          },
          "discussionId": {
            "type": "integer",
            "format": "int64"
          },
          "discussionContents": {
            "type": "string"
          },
          "discussionCommentsId": {
            "type": "integer",
            "format": "int64"
          },
          "discussionCommentsContents": {
            "type": "string"
          }
        }
      },
      "PageResponseNotificationResponse": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NotificationResponse"
            }
          },
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "totalItems": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ApiSuccessResponseHighlightFetchResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/HighlightFetchResponse"
          }
        },
        "description": "API 에러 응답을 감싸는 클래스"
      },
      "ApiSuccessResponseListHighlightReactionResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HighlightReactionResponse"
            }
          }
        },
        "description": "API 에러 응답을 감싸는 클래스"
      },
      "ApiSuccessResponseListHighlightCommentResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HighlightCommentResponse"
            }
          }
        },
        "description": "API 에러 응답을 감싸는 클래스"
      },
      "ApiSuccessResponsePageResponseGroupReviewFetchResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/PageResponseGroupReviewFetchResponse"
          }
        },
        "description": "API 에러 응답을 감싸는 클래스"
      },
      "PageResponseGroupReviewFetchResponse": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupReviewFetchResponse"
            }
          },
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "totalItems": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ApiSuccessResponseGroupReviewStatsResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/GroupReviewStatsResponse"
          }
        },
        "description": "API 에러 응답을 감싸는 클래스"
      },
      "GroupReviewStatsResponse": {
        "type": "object",
        "properties": {
          "reviewCount": {
            "type": "integer",
            "format": "int64"
          },
          "tagCount": {
            "type": "integer",
            "format": "int64"
          },
          "tagStats": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagStatDto"
            }
          }
        }
      },
      "TagStatDto": {
        "type": "object",
        "properties": {
          "tag": {
            "type": "string",
            "enum": [
              "FUNNY",
              "CALM",
              "PASSIONATE",
              "HEARTWARMING",
              "DEEP_THOUGHT",
              "INSIGHTFUL",
              "DIVERSE_OPINIONS",
              "TALKATIVE",
              "GOOD_LISTENERS",
              "STRUCTURED",
              "CASUAL",
              "WELL_MODERATED"
            ]
          },
          "count": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ApiSuccessResponsePageResponseGroupMemberResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/PageResponseGroupMemberResponse"
          }
        },
        "description": "API 에러 응답을 감싸는 클래스"
      },
      "GroupMemberResponse": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "nickname": {
            "type": "string"
          },
          "profileImageURL": {
            "type": "string"
          },
          "isApproved": {
            "type": "boolean"
          },
          "isLeader": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "approvedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "PageResponseGroupMemberResponse": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupMemberResponse"
            }
          },
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "totalItems": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ApiSuccessResponseGroupFetchResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/GroupFetchResponse"
          }
        },
        "description": "API 에러 응답을 감싸는 클래스"
      },
      "ApiSuccessResponsePageResponseGroupChatResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/PageResponseGroupChatResponse"
          }
        },
        "description": "API 에러 응답을 감싸는 클래스"
      },
      "PageResponseGroupChatResponse": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupChatResponse"
            }
          },
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "totalItems": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ApiSuccessResponseDiscussionDetailResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/DiscussionDetailResponse"
          }
        },
        "description": "API 에러 응답을 감싸는 클래스"
      },
      "DiscussionDetailResponse": {
        "type": "object",
        "properties": {
          "discussionId": {
            "type": "integer",
            "format": "int64"
          },
          "activityId": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "authorId": {
            "type": "integer",
            "format": "int64"
          },
          "authorName": {
            "type": "string"
          },
          "authorProfileImage": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "commentCount": {
            "type": "integer",
            "format": "int64"
          },
          "isDebate": {
            "type": "boolean"
          },
          "isAuthor": {
            "type": "boolean"
          },
          "linkedHighlights": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HighlightSummaryResponse"
            }
          },
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiscussionCommentFetchResponse"
            }
          }
        }
      },
      "HighlightSummaryResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "bookId": {
            "type": "integer",
            "format": "int64"
          },
          "authorId": {
            "type": "integer",
            "format": "int64"
          },
          "authorName": {
            "type": "string"
          },
          "authorProfileImageURL": {
            "type": "string"
          },
          "spine": {
            "type": "string"
          },
          "cfi": {
            "type": "string"
          },
          "memo": {
            "type": "string"
          },
          "highlightContent": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ApiSuccessResponseListCreditProductInfoResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreditProductInfoResponse"
            }
          }
        },
        "description": "API 에러 응답을 감싸는 클래스"
      },
      "CreditProductInfoResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "creditAmount": {
            "type": "integer",
            "format": "int32"
          },
          "price": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ApiSuccessResponseCreditWalletResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/CreditWalletResponse"
          }
        },
        "description": "API 에러 응답을 감싸는 클래스"
      },
      "CreditWalletResponse": {
        "type": "object",
        "properties": {
          "walletId": {
            "type": "integer",
            "format": "int64"
          },
          "balance": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ApiSuccessResponsePageResponseCreditTransactionResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/PageResponseCreditTransactionResponse"
          }
        },
        "description": "API 에러 응답을 감싸는 클래스"
      },
      "CreditTransactionResponse": {
        "type": "object",
        "properties": {
          "orderId": {
            "type": "string"
          },
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "productName": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": ["CHARGE", "REFUND"]
          },
          "creditAmount": {
            "type": "integer",
            "format": "int32"
          },
          "paymentAmount": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string"
          },
          "approvedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "PageResponseCreditTransactionResponse": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreditTransactionResponse"
            }
          },
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "totalItems": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ApiSuccessResponseEbookFetchResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/EbookFetchResponse"
          }
        },
        "description": "API 에러 응답을 감싸는 클래스"
      },
      "ApiSuccessResponseEbookDownloadResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/EbookDownloadResponse"
          }
        },
        "description": "API 에러 응답을 감싸는 클래스"
      },
      "EbookDownloadResponse": {
        "type": "object",
        "properties": {
          "presignedUrl": {
            "type": "string"
          }
        }
      },
      "ApiSuccessResponsePageResponseEbookRequestFetchResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/PageResponseEbookRequestFetchResponse"
          }
        },
        "description": "API 에러 응답을 감싸는 클래스"
      },
      "EbookRequestFetchResponse": {
        "type": "object",
        "properties": {
          "requestId": {
            "type": "integer",
            "format": "int64"
          },
          "bookId": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string"
          },
          "author": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "size": {
            "type": "integer",
            "format": "int64"
          },
          "price": {
            "type": "integer",
            "format": "int32"
          },
          "coverImageURL": {
            "type": "string"
          },
          "publisherId": {
            "type": "integer",
            "format": "int64"
          },
          "publisherName": {
            "type": "string"
          },
          "publisherEmail": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": ["PENDING", "APPROVED", "REJECTED"]
          },
          "rejectReason": {
            "type": "string"
          }
        }
      },
      "PageResponseEbookRequestFetchResponse": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EbookRequestFetchResponse"
            }
          },
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "totalItems": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ApiSuccessResponsePageResponseUserInfoResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/PageResponseUserInfoResponse"
          }
        },
        "description": "API 에러 응답을 감싸는 클래스"
      },
      "PageResponseUserInfoResponse": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserInfoResponse"
            }
          },
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "totalItems": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ApiSuccessResponsePageResponsePublisherInfoResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/PageResponsePublisherInfoResponse"
          }
        },
        "description": "API 에러 응답을 감싸는 클래스"
      },
      "PageResponsePublisherInfoResponse": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PublisherInfoResponse"
            }
          },
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "totalItems": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ApiSuccessResponseActivityFetchResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/ActivityFetchResponse"
          }
        },
        "description": "API 에러 응답을 감싸는 클래스"
      },
      "ActivityScoreResponse": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "userProfileImageURL": {
            "type": "string"
          },
          "userNickname": {
            "type": "string"
          },
          "score": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ApiSuccessResponseListActivityScoreResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityScoreResponse"
            }
          }
        },
        "description": "API 에러 응답을 감싸는 클래스"
      },
      "ApiSuccessResponseListHighlightPreviewResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HighlightPreviewResponse"
            }
          }
        },
        "description": "API 에러 응답을 감싸는 클래스"
      },
      "HighlightPreviewResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "authorId": {
            "type": "integer",
            "format": "int64"
          },
          "authorName": {
            "type": "string"
          },
          "authorProfileImageURL": {
            "type": "string"
          },
          "spine": {
            "type": "string"
          },
          "cfi": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ApiSuccessResponsePageResponseDiscussionFetchResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/PageResponseDiscussionFetchResponse"
          }
        },
        "description": "API 에러 응답을 감싸는 클래스"
      },
      "PageResponseDiscussionFetchResponse": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiscussionFetchResponse"
            }
          },
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "totalItems": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
