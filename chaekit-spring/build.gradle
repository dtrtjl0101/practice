plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'org.flywaydb.flyway' version '10.20.1'
	id 'jacoco'
}

group = 'com.qwerty'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

flyway {
	url = 'jdbc:mysql://localhost:3306/chaekit'
	user = 'root'
	password = '0000'
	locations = ['filesystem:src/main/resources/db/migration']
}

jacoco {
	toolVersion = '0.8.10'
}

jacocoTestReport {
	dependsOn test
	reports {
		html.required.set(true)
		xml.required.set(true)
		csv.required.set(false)
	}
	classDirectories.setFrom(
			files([
					fileTree(dir: layout.buildDirectory.dir("classes/java/main").get().asFile, exclude: [
							'**/*Controller.class',
							'**/*Dto.class',
							'**/*Request.class',
							'**/*Response.class',
							'**/exception/**',
							'**/config/**',
							'**/properties/**',
							'**/*Application.class',
							'**/*Advice.class',
							'**/*Handler.class',
							'**/*Filter.class',
							'**/resolver/**',
							'**/model/**'])
			])
	)
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'

	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'

	implementation 'software.amazon.awssdk:s3:2.21.5'

	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-mysql' // MySQLìš© flyway
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	runtimeOnly 'com.h2database:h2'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	runtimeOnly 'com.mysql:mysql-connector-j'
	testImplementation 'com.h2database:h2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	implementation 'org.springframework.boot:spring-boot-starter-websocket'
}

tasks.named('test', Test) {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}
