name: Deploy to EC2 via Docker Compose

on:
  push:
    paths:
      - "chaekit-spring/**"
    branches:
      - dev
permissions:
  contents: write

jobs:
  test-build-deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: chaekit-spring
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Grant execute permission to Gradle
        run: chmod +x ./gradlew

      # 테스트 + 커버리지 체크 (실패 시 중단됨)
      - name: Run tests with coverage
        run: ./gradlew test jacocoTestReport jacocoTestCoverageVerification

      # HTML 커버리지 리포트 게시
      - name: Deploy coverage to GitHub Pages
        if: github.ref == 'refs/heads/dev' && success()
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: chaekit-spring/build/reports/jacoco/test/html
          destination_dir: dev-server-test-coverage

      # EC2에 SSH로 접속해 docker-compose로 배포
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          envs: BRANCH_NAME
          script: |
            cd ~/app/qwerty-sc25/chaekit-spring
            git fetch origin
            git checkout "$BRANCH_NAME"
            git pull origin "$BRANCH_NAME"
            docker compose down
            docker compose up --build -d

            echo "Waiting for chaekit-spring to respond..."
            responding=false
            for i in {1..20}; do
              if curl -fs http://localhost:8080/api > /dev/null; then
                echo "chaekit-spring is responding ✅"
                responding=true
                break
              fi
              echo "Still waiting... ($i/20)"
              sleep 5
            done

            if [ "$responding" != "true" ]; then
              echo "chaekit-spring did not respond in time ❌"
              exit 1
            fi
            docker system prune -a -f
            docker builder prune -a -f
        env:
          BRANCH_NAME: ${{ github.ref_name }}
